1.	let x  = 16 : 4 : 32 : []



2.  let x = [1, 2, 3]
	 (head x) : (tail x)



3. makeEmpties x = [ [] | x <- [1..x]]



4.  :t zip
	Zip is type List



5.  1 : 3 : 5 : []
    [ 1, 3 ] ++ [5]
    1 : [ 3, 5 ]



6. [x | x<- [1..10], x `mod` 2 == 0]



7. getVowels st = [ c | c <- st, c `elem` ['a', 'e', 'i', 'o', 'u']]
	



8. let function c = [ (a,b) | a <- [1..c], let b = a^2, b<= c]



9. f (x,_,_,_,_) = x



10. tail' (_:x) = x



11. fib 0 = 0
	fib 1 = 1
	fib n = fib (n-1) + fib (n-2)